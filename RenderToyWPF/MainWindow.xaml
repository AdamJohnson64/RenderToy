<Window x:Class="RenderToy.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materials="clr-namespace:RenderToy.Materials"
        xmlns:rendertoy="clr-namespace:RenderToy.WPF"
        mc:Ignorable="d"
        Title="RenderToy Experiment" Height="600" Width="1024">
    <DockPanel>
        <DockPanel.Resources>
            <rendertoy:Camera x:Key="Camera"/>
            <rendertoy:NamedConverter x:Key="NamedConverter"/>
            <ToolTip x:Key="GraphNodeToolTip">
                <StackPanel>
                    <TextBlock Text="{Binding Converter={StaticResource NamedConverter}}" Margin="4"/>
                    <Border Background="Beige" BorderBrush="Black" BorderThickness="1" CornerRadius="4" Margin="4" Padding="4">
                        <rendertoy:ViewMaterial MaterialSource="{Binding}" MaterialWidth="256" MaterialHeight="256"/>
                    </Border>
                </StackPanel>
            </ToolTip>
            <DataTemplate x:Key="GraphNodeMNAdd">
                <Border Background="Beige" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="+"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeMNLerp">
                <Border Background="Beige" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Lerp"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeMNMultiply">
                <Border Background="Beige" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="X"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeMNSaturate">
                <Border Background="Beige" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Saturate"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeMNSubtract">
                <Border Background="Beige" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="-"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeMNThreshold">
                <Border Background="Beige" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Threshold"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeMNConstant">
                <Border Background="LightGreen" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=Value}"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeTexCoordU">
                <Border Background="LightGreen" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="U"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeTexCoordV">
                <Border Background="LightGreen" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="V"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="GraphNodeTemplate">
                <Border Background="LightBlue" BorderBrush="Black" BorderThickness="2" CornerRadius="4" Padding="2" ToolTip="{StaticResource GraphNodeToolTip}">
                    <StackPanel Orientation="Horizontal">
                        <rendertoy:ViewMaterial MaterialSource="{Binding}" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding Converter={StaticResource NamedConverter}}" Margin="2" VerticalAlignment="Center"/>
                    </StackPanel>
                </Border>
            </DataTemplate>
            <rendertoy:TypeBasedDataTemplateSelector x:Key="GraphNodeDataTemplateSelector">
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNAdd}" DataTemplate="{StaticResource GraphNodeMNAdd}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNLerp}" DataTemplate="{StaticResource GraphNodeMNLerp}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNMultiply}" DataTemplate="{StaticResource GraphNodeMNMultiply}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNSaturate}" DataTemplate="{StaticResource GraphNodeMNSaturate}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNSubtract}" DataTemplate="{StaticResource GraphNodeMNSubtract}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNThreshold}" DataTemplate="{StaticResource GraphNodeMNThreshold}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNConstant}" DataTemplate="{StaticResource GraphNodeMNConstant}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNTexCoordU}" DataTemplate="{StaticResource GraphNodeTexCoordU}"/>
                <rendertoy:TypeBasedDataTemplate DataType="{x:Type materials:MNTexCoordV}" DataTemplate="{StaticResource GraphNodeTexCoordV}"/>
                <rendertoy:TypeBasedDataTemplate DataTemplate="{StaticResource GraphNodeTemplate}"/>
            </rendertoy:TypeBasedDataTemplateSelector>
        </DockPanel.Resources>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="{x:Static rendertoy:MainWindow.CommandSceneNew}"/>
                <MenuItem Header="Open" Command="{x:Static rendertoy:MainWindow.CommandSceneOpen}"/>
                <MenuItem Header="Plane" Command="{x:Static rendertoy:MainWindow.CommandScenePlane}"/>
                <MenuItem Header="Add Sphere" Command="{x:Static rendertoy:MainWindow.CommandSceneAddSphere}"/>
            </MenuItem>
            <MenuItem Header="Debug">
                <MenuItem Header="Performance Trace" Command="{x:Static rendertoy:MainWindow.CommandDebugToolPerformanceTrace}"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Export RenderToy Document" Command="{x:Static rendertoy:MainWindow.CommandDocumentExport}"/>
            </MenuItem>
        </Menu>
        <TabControl>
            <!-- ==================== RenderToy Inspiration & History ==================== -->
            <TabItem Header="Interactive Document">
                <FlowDocumentReader ViewingMode="Page">
                    <StaticResource ResourceKey="RenderToyDocument"/>
                </FlowDocumentReader>
            </TabItem>
            <TabItem Header="Interactive View" DataContext="{Binding Path=Scene}">
                <DockPanel>
                    <!-- Scene Graph -->
                    <TreeView DockPanel.Dock="Left" ItemsSource="{Binding Path=Children}" Width="256">
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Name}"/>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                    <!-- Menu -->
                    <Menu DockPanel.Dock="Top">
                        <MenuItem Header="View">
                            <MenuItem Header="Preview" Command="{x:Static rendertoy:MainWindow.CommandRenderPreviewsToggle}"/>
                            <MenuItem Header="Wireframe" Command="{x:Static rendertoy:MainWindow.CommandRenderWireframeToggle}"/>
                        </MenuItem>
                    </Menu>
                    <!-- View Area -->
                    <Grid Background="LightGray">
                        <!-- Main Viewport Layer -->
                        <rendertoy:ViewSoftwareCustomizable x:Name="ViewMain" rendertoy:AttachedView.Scene="{Binding}" rendertoy:AttachedView.TransformModelViewProjection="{Binding Source={StaticResource Camera}, Path=TransformModelViewProjection}" rendertoy:AttachedCamera.Camera="{StaticResource Camera}"/>
                        <!-- Wireframe Layer -->
                        <rendertoy:ViewSoftwareWireframe x:Name="ViewWireframe" IsHitTestVisible="False" rendertoy:AttachedView.Scene="{Binding}" rendertoy:AttachedView.TransformModelViewProjection="{Binding Source={StaticResource Camera}, Path=TransformModelViewProjection}" Opacity="0.5"/>
                        <!-- PIP Preview -->
                        <Border x:Name="ViewPreview" HorizontalAlignment="Right" VerticalAlignment="Top" BorderBrush="DarkGray" BorderThickness="2" CornerRadius="8" Margin="8" Padding="4">
                            <Border.Background>
                                <LinearGradientBrush>
                                    <LinearGradientBrush.Transform>
                                        <RotateTransform Angle="45"/>
                                    </LinearGradientBrush.Transform>
                                    <GradientStop Color="LightGray" Offset="0"/>
                                    <GradientStop Color="DarkGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5" ShadowDepth="4"/>
                            </Border.Effect>
                            <StackPanel>
                                <TextBlock HorizontalAlignment="Left" Foreground="DarkGray" Text="Preview"/>
                                <Border Background="White" BorderBrush="DarkGray" BorderThickness="1" CornerRadius="4" Padding="2">
                                    <rendertoy:ViewSoftwareCustomizable Width="192" Height="128" rendertoy:AttachedView.Scene="{Binding}" rendertoy:AttachedView.TransformModelViewProjection="{Binding Source={StaticResource Camera}, Path=TransformModelViewProjection}"/>
                                </Border>
                            </StackPanel>
                        </Border>
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Materials" DataContext="{Binding Path=Materials}">
                <DockPanel>
                    <!-- ==================== Material List ==================== -->
                    <GroupBox Header="Material Nodes" Margin="4" Padding="4">
                        <ListView x:Name="MaterialList" DockPanel.Dock="Left" ItemsSource="{Binding}" IsSynchronizedWithCurrentItem="True" ItemTemplate="{StaticResource GraphNodeTemplate}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </GroupBox>
                    <!-- ==================== Texture View ==================== -->
                    <ContentControl Content="{Binding ElementName=MaterialList, Path=SelectedItem}">
                        <ContentControl.ContentTemplate>
                            <DataTemplate>
                                <TabControl>
                                    <TabItem Header="Graph">
                                        <DockPanel>
                                            <Menu DockPanel.Dock="Top">
                                                <MenuItem Command="{x:Static rendertoy:ViewZoom.RecenterCommand}" CommandTarget="{Binding ElementName=ViewZoomGraph}"/>>
                                            </Menu>
                                            <rendertoy:ViewZoom x:Name="ViewZoomGraph">
                                                <rendertoy:ViewMaterialGraph Root="{Binding}">
                                                    <rendertoy:ViewMaterialGraph.NodeTemplate>
                                                        <DataTemplate>
                                                            <rendertoy:ViewMaterialNode ContentTemplateSelector="{StaticResource GraphNodeDataTemplateSelector}"/>
                                                        </DataTemplate>
                                                    </rendertoy:ViewMaterialGraph.NodeTemplate>
                                                </rendertoy:ViewMaterialGraph>
                                            </rendertoy:ViewZoom>
                                        </DockPanel>
                                    </TabItem>
                                    <TabItem Header="Preview">
                                        <DockPanel>
                                            <Menu DockPanel.Dock="Top">
                                                <MenuItem Command="{x:Static rendertoy:ViewZoom.RecenterCommand}" CommandTarget="{Binding ElementName=ViewZoomPreview}"/>>
                                            </Menu>
                                            <rendertoy:ViewZoom x:Name="ViewZoomPreview">
                                                <rendertoy:ViewMaterial MaterialSource="{Binding}" MaterialWidth="256" MaterialHeight="256" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                                            </rendertoy:ViewZoom>
                                        </DockPanel>
                                    </TabItem>
                                </TabControl>
                            </DataTemplate>
                        </ContentControl.ContentTemplate>
                    </ContentControl>
                </DockPanel>
            </TabItem>
            <!-- ==================== Accelerated DirectX Visualizer ==================== -->
            <TabItem Header="DX9" DataContext="{Binding Path=Scene}">
                <Grid Background="Black">
                    <rendertoy:ViewDirectX9FixedFunction rendertoy:AttachedView.Scene="{Binding}" rendertoy:AttachedView.TransformModelViewProjection="{Binding Source={StaticResource Camera}, Path=TransformModelViewProjection}" rendertoy:AttachedCamera.Camera="{StaticResource Camera}"/>
                </Grid>
            </TabItem>
            <!-- ==================== Accelerated DirectX12 Visualizer ==================== -->
            <TabItem Header="DX12" DataContext="{Binding Path=Scene}">
                <Grid Background="Black">
                    <rendertoy:ViewDirectX12 rendertoy:AttachedView.Scene="{Binding}" rendertoy:AttachedView.TransformModelViewProjection="{Binding Source={StaticResource Camera}, Path=TransformModelViewProjection}" rendertoy:AttachedCamera.Camera="{StaticResource Camera}"/>
                </Grid>
            </TabItem>
            <!-- ==================== Shader Editor ==================== -->
            <TabItem Header="Shader Editor" DataContext="{Binding Path=Scene}">
                <TabItem.Resources>
                    <rendertoy:CompileVertexShaderConverter x:Key="CompileVertexShaderConverter"/>
                    <rendertoy:CompilePixelShaderConverter x:Key="CompilePixelShaderConverter"/>
                </TabItem.Resources>
                <Grid Background="Black">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0">
                        <Border DockPanel.Dock="Bottom" BorderBrush="DarkGray" BorderThickness="2" CornerRadius="4" Margin="2" Padding="2">
                            <TextBlock x:Name="ShaderErrorsPS" FontFamily="Consolas" Foreground="Red"/>
                        </Border>
                        <Border DockPanel.Dock="Bottom" BorderBrush="DarkGray" BorderThickness="2" CornerRadius="4" Margin="2" Padding="2">
                            <TextBlock x:Name="ShaderErrorsVS" FontFamily="Consolas" Foreground="Red"/>
                        </Border>
                        <TextBox x:Name="ShaderCode" AcceptsReturn="True" TextWrapping="Wrap" FontFamily="Consolas" Background="Black" Foreground="White"/>
                    </DockPanel>
                    <GridSplitter Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="4"/>
                    <rendertoy:ViewDirectX9 Grid.Column="1" rendertoy:AttachedView.Scene="{Binding}" rendertoy:AttachedView.TransformCamera="{Binding Source={StaticResource Camera}, Path=TransformCamera}" rendertoy:AttachedView.TransformView="{Binding Source={StaticResource Camera}, Path=TransformView}" rendertoy:AttachedView.TransformProjection="{Binding Source={StaticResource Camera}, Path=TransformProjection}" rendertoy:AttachedView.TransformModelViewProjection="{Binding Source={StaticResource Camera}, Path=TransformModelViewProjection}" VertexShader="{Binding ElementName=ShaderCode, Path=Text, Converter={StaticResource CompileVertexShaderConverter}}" PixelShader="{Binding ElementName=ShaderCode, Path=Text, Converter={StaticResource CompilePixelShaderConverter}}" rendertoy:AttachedCamera.Camera="{StaticResource Camera}"/>
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
